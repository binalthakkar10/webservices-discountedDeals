<?php

/**
 * This is the model base class for the table "offers".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Offers".
 *
 * Columns in table "offers" available as properties of the model,
 * followed by relations of table "offers" available as properties of the model.
 *
 * @property integer $offer_id
 * @property integer $user_id
 * @property integer $cat_id
 * @property string $offer_start_date
 * @property string $offer_end_date
 * @property string $offer_name
 * @property string $offer_text
 * @property string $offer_link
 * @property double $offer_price
 * @property integer $currency_id
 * @property string $phone
 * @property string $image
 * @property integer $location
 * @property string $latitude
 * @property string $longitude
 * @property integer $latest_deal_count
 * @property integer $no_of_deals
 * @property string $discount
 * @property integer $offer_status
 * @property string $created_date
 * @property string $updated_date
 * @property integer $status
 * @property string $address1
 * @property string $address2
 * @property integer $country
 * @property string $state
 *
 * @property Country $country0
 * @property UserDetail $user
 * @property Category $cat
 * @property Currency $currency
 * @property City $location0
 * @property Payment[] $payments
 */
abstract class BaseOffers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'offers';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Offers|Offers', $n);
	}

	public static function representingColumn() {
		return 'offer_start_date';
	}

	public function rules() {
		return array(
			array('user_id, cat_id, offer_start_date, offer_end_date, offer_name, offer_text, offer_link, offer_price, currency_id, phone, image, location, latitude, longitude, latest_deal_count, no_of_deals, discount, created_date, address1, address2, country, state', 'required'),
			array('user_id, cat_id, currency_id, location, latest_deal_count, no_of_deals, offer_status, status, country', 'numerical', 'integerOnly'=>true),
			array('offer_price', 'numerical'),
			array('offer_name, address1, address2', 'length', 'max'=>255),
			array('offer_text', 'length', 'max'=>250),
			array('offer_link', 'length', 'max'=>1000),
			array('phone, state', 'length', 'max'=>50),
			array('image, latitude, longitude', 'length', 'max'=>100),
			array('discount', 'length', 'max'=>20),
			array('updated_date', 'safe'),
			array('offer_status, updated_date, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('offer_id, user_id, cat_id, offer_start_date, offer_end_date, offer_name, offer_text, offer_link, offer_price, currency_id, phone, image, location, latitude, longitude, latest_deal_count, no_of_deals, discount, offer_status, created_date, updated_date, status, address1, address2, country, state', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'country0' => array(self::BELONGS_TO, 'Country', 'country'),
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
			'cat' => array(self::BELONGS_TO, 'Category', 'cat_id'),
			'currency' => array(self::BELONGS_TO, 'Currency', 'currency_id'),
			'location0' => array(self::BELONGS_TO, 'City', 'location'),
			'payments' => array(self::HAS_MANY, 'Payment', 'offer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'offer_id' => Yii::t('app', 'Offer'),
			'user_id' => null,
			'cat_id' => null,
			'offer_start_date' => Yii::t('app', 'Offer Start Date'),
			'offer_end_date' => Yii::t('app', 'Offer End Date'),
			'offer_name' => Yii::t('app', 'Offer Name'),
			'offer_text' => Yii::t('app', 'Offer Text'),
			'offer_link' => Yii::t('app', 'Offer Link'),
			'offer_price' => Yii::t('app', 'Offer Price'),
			'currency_id' => null,
			'phone' => Yii::t('app', 'Phone'),
			'image' => Yii::t('app', 'Image'),
			'location' => null,
			'latitude' => Yii::t('app', 'Latitude'),
			'longitude' => Yii::t('app', 'Longitude'),
			'latest_deal_count' => Yii::t('app', 'Latest Deal Count'),
			'no_of_deals' => Yii::t('app', 'No Of Deals'),
			'discount' => Yii::t('app', 'Discount'),
			'offer_status' => Yii::t('app', 'Offer Status'),
			'created_date' => Yii::t('app', 'Created Date'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'status' => Yii::t('app', 'Status'),
			'address1' => Yii::t('app', 'Address1'),
			'address2' => Yii::t('app', 'Address2'),
			'country' => null,
			'state' => Yii::t('app', 'State'),
			'country0' => null,
			'user' => null,
			'cat' => null,
			'currency' => null,
			'location0' => null,
			'payments' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('offer_id', $this->offer_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('cat_id', $this->cat_id);
		$criteria->compare('offer_start_date', $this->offer_start_date, true);
		$criteria->compare('offer_end_date', $this->offer_end_date, true);
		$criteria->compare('offer_name', $this->offer_name, true);
		$criteria->compare('offer_text', $this->offer_text, true);
		$criteria->compare('offer_link', $this->offer_link, true);
		$criteria->compare('offer_price', $this->offer_price);
		$criteria->compare('currency_id', $this->currency_id);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('location', $this->location);
		$criteria->compare('latitude', $this->latitude, true);
		$criteria->compare('longitude', $this->longitude, true);
		$criteria->compare('latest_deal_count', $this->latest_deal_count);
		$criteria->compare('no_of_deals', $this->no_of_deals);
		$criteria->compare('discount', $this->discount, true);
		$criteria->compare('offer_status', $this->offer_status);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('address1', $this->address1, true);
		$criteria->compare('address2', $this->address2, true);
		$criteria->compare('country', $this->country);
		$criteria->compare('state', $this->state, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}