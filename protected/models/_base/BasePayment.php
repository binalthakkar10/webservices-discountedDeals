<?php

/**
 * This is the model base class for the table "payment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Payment".
 *
 * Columns in table "payment" available as properties of the model,
 * followed by relations of table "payment" available as properties of the model.
 *
 * @property integer $payment_id
 * @property integer $offer_id
 * @property integer $user_id
 * @property string $payment_date
 * @property double $price
 * @property string $created_date
 * @property string $payment_status
 * @property integer $status
 *
 * @property UserDetail $user
 * @property Offers $offer
 */
abstract class BasePayment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'payment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Payment|Payments', $n);
	}

	public static function representingColumn() {
		return 'payment_date';
	}

	public function rules() {
		return array(
			array('offer_id, user_id, payment_date, price', 'required'),
			array('offer_id, user_id, status', 'numerical', 'integerOnly'=>true),
			array('price', 'numerical'),
			array('payment_status', 'length', 'max'=>1),
			array('created_date', 'safe'),
			array('created_date, payment_status, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('payment_id, offer_id, user_id, payment_date, price, created_date, payment_status, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
			'offer' => array(self::BELONGS_TO, 'Offers', 'offer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'payment_id' => Yii::t('app', 'Payment'),
			'offer_id' => null,
			'user_id' => null,
			'payment_date' => Yii::t('app', 'Payment Date'),
			'price' => Yii::t('app', 'Price'),
			'created_date' => Yii::t('app', 'Created Date'),
			'payment_status' => Yii::t('app', 'Payment Status'),
			'status' => Yii::t('app', 'Status'),
			'user' => null,
			'offer' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('payment_id', $this->payment_id);
		$criteria->compare('offer_id', $this->offer_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('payment_date', $this->payment_date, true);
		$criteria->compare('price', $this->price);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('payment_status', $this->payment_status, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}